################################################################################
#
#    weatheralerts_2.yaml
#
#    weatheralerts sensors and automations (read comments below)
#
################################################################################
#
#    Requirements: weatheralerts custom component (installable via HACS)
#
#    This second yaml package can be used to setup a second weatheralerts
#    platform configuration for a seperate geographical location (i.e. monitor
#    alerts for a different zone or county). To setup additional alerts for
#    additional counties or zones, just copy this yaml to another file
#    (i.e. weather_alerts_3.yaml) and do a find-and-replace to find all
#    instances of sensor.weatheralerts_2 and change them to the proper number
#    (i.e. sensor.weatheralerts_3). Then, in the new yaml file, scroll to the
#    bottom to find the automation and script sections and change the 'alias'
#    of each automation and script to identify for which alert the automations
#    and script is used.
#
#    To use this package go to your Home Assistant web interface, go to
#    Configuration, then Entities, and find the new sensor.ZoneName sensor
#    that was created for your location (ZoneName will likely be the name of
#    your county). Rename that sensor Entity ID to sensor.weatheralerts_2 and
#    you shouldn't need to alter anything else in this yaml package to make it
#    all work.
#
#    This yaml package stores up to 5 most recent active alerts from the
#    weather alerts feed and places them in these sensors:
#
#        sensor.weatheralerts_2_alert_1
#        sensor.weatheralerts_2_alert_2
#        sensor.weatheralerts_2_alert_3
#        sensor.weatheralerts_2_alert_4
#        sensor.weatheralerts_2_alert_5
#
#    Additional sensors available:
#        sensor.weatheralerts_2_active_alerts (contains number of active alerts)
#        sensor.weatheralerts_2_alerts_are_active (contains either Yes or No)
#        sensor.weatheralerts_2_alert_1_last_changed
#        sensor.weatheralerts_2_alert_2_last_changed
#        sensor.weatheralerts_2_alert_3_last_changed
#        sensor.weatheralerts_2_alert_4_last_changed
#        sensor.weatheralerts_2_alert_5_last_changed
#        sensor.weatheralerts_2_alert_1_most_recent_active_alert
#        sensor.weatheralerts_2_alert_2_most_recent_active_alert
#        sensor.weatheralerts_2_alert_3_most_recent_active_alert
#        sensor.weatheralerts_2_alert_4_most_recent_active_alert
#        sensor.weatheralerts_2_alert_5_most_recent_active_alert
#
################################################################################




################################################################################
## sensor ##

sensor:
  - platform: template
    sensors:
      weatheralerts_2_active_alerts:
        ## You can add your county or city name to friendly_name for personalization
        ## For example: Weather Alerts for YourCountyName
        friendly_name: Weather Alerts
        unit_of_measurement: Alerts
        icon_template: mdi:alert-rhombus
        value_template: >-
          {% set alerts_total = namespace(count=0) %}
          {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
            {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
              {% if as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0 %}
                {% set alerts_total.count = alerts_total.count + 1 %} 
              {% endif %}
            {% endfor %}
          {% endif %}
          {{ alerts_total.count }}
        attribute_templates:
          warning_count: >-
            {% set warnings = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'warning' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set warnings.count = warnings.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ warnings.count }}
          watch_count: >-
            {% set watches = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'watch' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set watches.count = watches.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ watches.count }}
          advisory_count: >-
            {% set advisories = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'advisory' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set advisories.count = advisories.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ advisories.count }}
          statement_count: >-
            {% set statements = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'statement' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set statements.count = statements.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ statements.count }}
          outlook_count: >-
            {% set outlooks = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'outlook' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set outlooks.count = outlooks.count + 1 %}
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ outlooks.count }}
          alert_count: >-
            {% set alerts = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'alert' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set alerts.count = alerts.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ alerts.count }}
          message_count: >-
            {% set messages = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'message' in alert.event.lower() and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set messages.count = messages.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ messages.count }}
          important_count: >-
            {% set important = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if ('emergency' in alert.event.lower() or 'danger' in alert.event.lower() or 'immediate' in alert.event.lower()) and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set important.count = important.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ important.count }}
          test_count: >-
            {% set test = namespace(count=0) %}
            {% if (state_attr('sensor.weatheralerts_2', 'alerts')) %}
              {% for alert in state_attr('sensor.weatheralerts_2', 'alerts') %}
                {% if 'Test' in alert.event and (as_timestamp(alert['endsExpires']) - as_timestamp(now()) > 0) %}
                  {% set test.count = test.count + 1 %} 
                {% endif %}
              {% endfor %}
            {% endif %}
            {{ test.count }}

      weatheralerts_2_alert_1:
        friendly_name: Weather Alert 1
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% set state =  states['sensor.weatheralerts_2_alert_1'].attributes.alert_event %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) and (as_timestamp(state_attr('sensor.weatheralerts_2', 'alerts')[0].endsExpires) - as_timestamp(now()) > 0)) %}
            on
          {% else %}
            off
          {% endif %}
        attribute_templates:
          alert_id: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].id }}
            {% else %}
              None
            {% endif %}
          alert_event: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].event }}
            {% else %}
              None
            {% endif %}
          alert_area: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].area }}
            {% else %}
              None
            {% endif %}
          alert_NWSheadline: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}
            {% else %}
              None
            {% endif %}
          alert_description: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].description  }}
            {% else %}
              None
            {% endif %}
          alert_messageType: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].messageType }}
            {% else %}
              None
            {% endif %}
          alert_status: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].status }}
            {% else %}
              None
            {% endif %}
          alert_category: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].category }}
            {% else %}
              None
            {% endif %}
          alert_urgency: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].urgency }}
            {% else %}
              None
            {% endif %}
          alert_severity: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].severity }}
            {% else %}
              None
            {% endif %}
          alert_certainty: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].certainty }}
            {% else %}
              None
            {% endif %}
          alert_response: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].response }}
            {% else %}
              None
            {% endif %}
          alert_instruction: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].instruction }}
            {% else %}
              None
            {% endif %}
          alert_sent: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].sent }}
            {% else %}
              None
            {% endif %}
          alert_effective: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].effective }}
            {% else %}
              None
            {% endif %}
          alert_onset: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].onset }}
            {% else %}
              None
            {% endif %}
          alert_expires: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].expires }}
            {% else %}
              None
            {% endif %}
          alert_title: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].title }}
            {% else %}
              None
            {% endif %}
          alert_zoneid: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].zoneid }}
            {% else %}
              None
            {% endif %}
          display_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].title }}
            {% else %}
              None
            {% endif %}
          display_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {% if states.sensor.weatheralerts_2.attributes.alerts[0].NWSheadline != "null" %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}<br>
              {% endif %}
              <br>{{ states.sensor.weatheralerts_2.attributes.alerts[0].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}</ul><br>
              {% if states.sensor.weatheralerts_2.attributes.alerts[0].instruction != None %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}<br>
              {% endif %}
              <br>Where : {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              <br>Effective: {{ states.sensor.weatheralerts_2.attributes.alerts[0].effective }}
              {%- if states.sensor.weatheralerts_2.attributes.alerts[0].ends != None %}
                <br>Ends: {{ states.sensor.weatheralerts_2.attributes.alerts[0].ends }}
              {%- endif %}
              <br>Expires: {{ states.sensor.weatheralerts_2.attributes.alerts[0].expires }}
            {% else %}
              None
            {% endif %}
          spoken_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              Attention!!! Weather alert for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}. A {{ states.sensor.weatheralerts_2.attributes.alerts[0].title }}. {{ states.sensor.weatheralerts_2.attributes.alerts[0].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') | capitalize }}.
            {% else %}
              None
            {% endif %}
          spoken_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_1', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 0)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[0].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% if states.sensor.weatheralerts_2.attributes.alerts[0].instruction != None %}
                {{ states.sensor.weatheralerts_2.attributes.alerts[0].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% endif %}
            {% else %}
              None
            {% endif %}
      weatheralerts_2_alert_2:
        friendly_name: Weather Alert 2
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% set state =  states['sensor.weatheralerts_2_alert_2'].attributes.alert_event %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[1] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[1] != null) and (as_timestamp(state_attr('sensor.weatheralerts_2', 'alerts')[1].endsExpires) - as_timestamp(now()) > 0)) %}
            on
          {% else %}
            off
          {% endif %}
        attribute_templates:
          alert_id: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].id }}
            {% else %}
              None
            {% endif %}
          alert_event: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].event }}
            {% else %}
              None
            {% endif %}
          alert_area: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].area }}
            {% else %}
              None
            {% endif %}
          alert_NWSheadline: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}
            {% else %}
              None
            {% endif %}
          alert_description: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].description  }}
            {% else %}
              None
            {% endif %}
          alert_messageType: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].messageType }}
            {% else %}
              None
            {% endif %}
          alert_status: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].status }}
            {% else %}
              None
            {% endif %}
          alert_category: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].category }}
            {% else %}
              None
            {% endif %}
          alert_urgency: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].urgency }}
            {% else %}
              None
            {% endif %}
          alert_severity: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].severity }}
            {% else %}
              None
            {% endif %}
          alert_certainty: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].certainty }}
            {% else %}
              None
            {% endif %}
          alert_response: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].response }}
            {% else %}
              None
            {% endif %}
          alert_instruction: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].instruction }}
            {% else %}
              None
            {% endif %}
          alert_sent: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].sent }}
            {% else %}
              None
            {% endif %}
          alert_effective: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].effective }}
            {% else %}
              None
            {% endif %}
          alert_onset: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].onset }}
            {% else %}
              None
            {% endif %}
          alert_expires: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].expires }}
            {% else %}
              None
            {% endif %}
          alert_title: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].title }}
            {% else %}
              None
            {% endif %}
          alert_zoneid: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].zoneid }}
            {% else %}
              None
            {% endif %}
          display_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].title }}
            {% else %}
              None
            {% endif %}
          display_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {% if states.sensor.weatheralerts_2.attributes.alerts[1].NWSheadline != "null" %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}<br>
              {% endif %}
              <br>{{ states.sensor.weatheralerts_2.attributes.alerts[1].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}</ul><br>
              {% if states.sensor.weatheralerts_2.attributes.alerts[1].instruction != None %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}<br>
              {% endif %}
              <br>Where : {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              <br>Effective: {{ states.sensor.weatheralerts_2.attributes.alerts[1].effective }}
              {%- if states.sensor.weatheralerts_2.attributes.alerts[1].ends != None %}
                <br>Ends: {{ states.sensor.weatheralerts_2.attributes.alerts[1].ends }}
              {%- endif %}
              <br>Expires: {{ states.sensor.weatheralerts_2.attributes.alerts[1].expires }}
            {% else %}
              None
            {% endif %}
          spoken_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              Attention!!! Weather alert for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}. A {{ states.sensor.weatheralerts_2.attributes.alerts[1].title }}. {{ states.sensor.weatheralerts_2.attributes.alerts[1].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') | capitalize }}.
            {% else %}
              None
            {% endif %}
          spoken_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_2', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 1)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[1].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% if states.sensor.weatheralerts_2.attributes.alerts[1].instruction != None %}
                {{ states.sensor.weatheralerts_2.attributes.alerts[1].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% endif %}
            {% else %}
              None
            {% endif %}
      weatheralerts_2_alert_3:
        friendly_name: Weather Alert 3
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% set state =  states['sensor.weatheralerts_2_alert_3'].attributes.alert_event %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[2] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[2] != null) and (as_timestamp(state_attr('sensor.weatheralerts_2', 'alerts')[2].endsExpires) - as_timestamp(now()) > 0)) %}
            on
          {% else %}
            off
          {% endif %}
        attribute_templates:
          alert_id: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].id }}
            {% else %}
              None
            {% endif %}
          alert_event: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].event }}
            {% else %}
              None
            {% endif %}
          alert_area: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].area }}
            {% else %}
              None
            {% endif %}
          alert_NWSheadline: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}
            {% else %}
              None
            {% endif %}
          alert_description: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].description  }}
            {% else %}
              None
            {% endif %}
          alert_messageType: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].messageType }}
            {% else %}
              None
            {% endif %}
          alert_status: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].status }}
            {% else %}
              None
            {% endif %}
          alert_category: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].category }}
            {% else %}
              None
            {% endif %}
          alert_urgency: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].urgency }}
            {% else %}
              None
            {% endif %}
          alert_severity: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].severity }}
            {% else %}
              None
            {% endif %}
          alert_certainty: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].certainty }}
            {% else %}
              None
            {% endif %}
          alert_response: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].response }}
            {% else %}
              None
            {% endif %}
          alert_instruction: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].instruction }}
            {% else %}
              None
            {% endif %}
          alert_sent: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].sent }}
            {% else %}
              None
            {% endif %}
          alert_effective: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].effective }}
            {% else %}
              None
            {% endif %}
          alert_onset: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].onset }}
            {% else %}
              None
            {% endif %}
          alert_expires: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].expires }}
            {% else %}
              None
            {% endif %}
          alert_title: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].title }}
            {% else %}
              None
            {% endif %}
          alert_zoneid: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].zoneid }}
            {% else %}
              None
            {% endif %}
          display_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].title }}
            {% else %}
              None
            {% endif %}
          display_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {% if states.sensor.weatheralerts_2.attributes.alerts[2].NWSheadline != "null" %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}<br>
              {% endif %}
              <br>{{ states.sensor.weatheralerts_2.attributes.alerts[2].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}</ul><br>
              {% if states.sensor.weatheralerts_2.attributes.alerts[2].instruction != None %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}<br>
              {% endif %}
              <br>Where : {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              <br>Effective: {{ states.sensor.weatheralerts_2.attributes.alerts[2].effective }}
              {%- if states.sensor.weatheralerts_2.attributes.alerts[2].ends != None %}
                <br>Ends: {{ states.sensor.weatheralerts_2.attributes.alerts[2].ends }}
              {%- endif %}
              <br>Expires: {{ states.sensor.weatheralerts_2.attributes.alerts[2].expires }}
            {% else %}
              None
            {% endif %}
          spoken_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              Attention!!! Weather alert for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}. A {{ states.sensor.weatheralerts_2.attributes.alerts[2].title }}. {{ states.sensor.weatheralerts_2.attributes.alerts[2].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') | capitalize }}.
            {% else %}
              None
            {% endif %}
          spoken_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_3', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 2)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[2].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% if states.sensor.weatheralerts_2.attributes.alerts[2].instruction != None %}
                {{ states.sensor.weatheralerts_2.attributes.alerts[2].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% endif %}
            {% else %}
              None
            {% endif %}
      weatheralerts_2_alert_4:
        friendly_name: Weather Alert 4
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% set state =  states['sensor.weatheralerts_2_alert_4'].attributes.alert_event %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[3] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[3] != null) and (as_timestamp(state_attr('sensor.weatheralerts_2', 'alerts')[3].endsExpires) - as_timestamp(now()) > 0)) %}
            on
          {% else %}
            off
          {% endif %}
        attribute_templates:
          alert_id: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].id }}
            {% else %}
              None
            {% endif %}
          alert_event: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].event }}
            {% else %}
              None
            {% endif %}
          alert_area: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].area }}
            {% else %}
              None
            {% endif %}
          alert_NWSheadline: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}
            {% else %}
              None
            {% endif %}
          alert_description: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].description  }}
            {% else %}
              None
            {% endif %}
          alert_messageType: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].messageType }}
            {% else %}
              None
            {% endif %}
          alert_status: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].status }}
            {% else %}
              None
            {% endif %}
          alert_category: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].category }}
            {% else %}
              None
            {% endif %}
          alert_urgency: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].urgency }}
            {% else %}
              None
            {% endif %}
          alert_severity: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].severity }}
            {% else %}
              None
            {% endif %}
          alert_certainty: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].certainty }}
            {% else %}
              None
            {% endif %}
          alert_response: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].response }}
            {% else %}
              None
            {% endif %}
          alert_instruction: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].instruction }}
            {% else %}
              None
            {% endif %}
          alert_sent: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].sent }}
            {% else %}
              None
            {% endif %}
          alert_effective: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].effective }}
            {% else %}
              None
            {% endif %}
          alert_onset: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].onset }}
            {% else %}
              None
            {% endif %}
          alert_expires: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].expires }}
            {% else %}
              None
            {% endif %}
          alert_title: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].title }}
            {% else %}
              None
            {% endif %}
          alert_zoneid: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].zoneid }}
            {% else %}
              None
            {% endif %}
          display_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].title }}
            {% else %}
              None
            {% endif %}
          display_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {% if states.sensor.weatheralerts_2.attributes.alerts[3].NWSheadline != "null" %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}<br>
              {% endif %}
              <br>{{ states.sensor.weatheralerts_2.attributes.alerts[3].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}</ul><br>
              {% if states.sensor.weatheralerts_2.attributes.alerts[3].instruction != None %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}<br>
              {% endif %}
              <br>Where : {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              <br>Effective: {{ states.sensor.weatheralerts_2.attributes.alerts[3].effective }}
              {%- if states.sensor.weatheralerts_2.attributes.alerts[3].ends != None %}
                <br>Ends: {{ states.sensor.weatheralerts_2.attributes.alerts[3].ends }}
              {%- endif %}
              <br>Expires: {{ states.sensor.weatheralerts_2.attributes.alerts[3].expires }}
            {% else %}
              None
            {% endif %}
          spoken_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              Attention!!! Weather alert for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}. A {{ states.sensor.weatheralerts_2.attributes.alerts[3].title }}. {{ states.sensor.weatheralerts_2.attributes.alerts[3].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') | capitalize }}.
            {% else %}
              None
            {% endif %}
          spoken_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_4', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 3)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[3].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% if states.sensor.weatheralerts_2.attributes.alerts[3].instruction != None %}
                {{ states.sensor.weatheralerts_2.attributes.alerts[3].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% endif %}
            {% else %}
              None
            {% endif %}
      weatheralerts_2_alert_5:
        friendly_name: Weather Alert 5
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% set state =  states['sensor.weatheralerts_2_alert_5'].attributes.alert_event %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[4] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[4] != null) and (as_timestamp(state_attr('sensor.weatheralerts_2', 'alerts')[4].endsExpires) - as_timestamp(now()) > 0)) %}
            on
          {% else %}
            off
          {% endif %}
        attribute_templates:
          alert_id: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].id }}
            {% else %}
              None
            {% endif %}
          alert_event: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].event }}
            {% else %}
              None
            {% endif %}
          alert_area: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].area }}
            {% else %}
              None
            {% endif %}
          alert_NWSheadline: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}
            {% else %}
              None
            {% endif %}
          alert_description: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].description  }}
            {% else %}
              None
            {% endif %}
          alert_messageType: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].messageType }}
            {% else %}
              None
            {% endif %}
          alert_status: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].status }}
            {% else %}
              None
            {% endif %}
          alert_category: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].category }}
            {% else %}
              None
            {% endif %}
          alert_urgency: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].urgency }}
            {% else %}
              None
            {% endif %}
          alert_severity: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].severity }}
            {% else %}
              None
            {% endif %}
          alert_certainty: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].certainty }}
            {% else %}
              None
            {% endif %}
          alert_response: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].response }}
            {% else %}
              None
            {% endif %}
          alert_instruction: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].instruction }}
            {% else %}
              None
            {% endif %}
          alert_sent: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].sent }}
            {% else %}
              None
            {% endif %}
          alert_effective: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].effective }}
            {% else %}
              None
            {% endif %}
          alert_onset: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].onset }}
            {% else %}
              None
            {% endif %}
          alert_expires: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].expires }}
            {% else %}
              None
            {% endif %}
          alert_title: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].title }}
            {% else %}
              None
            {% endif %}
          alert_zoneid: >-
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].zoneid }}
            {% else %}
              None
            {% endif %}
          display_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].title }}
            {% else %}
              None
            {% endif %}
          display_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {% if states.sensor.weatheralerts_2.attributes.alerts[4].NWSheadline != "null" %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') }}<br>
              {% endif %}
              <br>{{ states.sensor.weatheralerts_2.attributes.alerts[4].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}</ul><br>
              {% if states.sensor.weatheralerts_2.attributes.alerts[4].instruction != None %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}<br>
              {% endif %}
              <br>Where : {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              <br>Effective: {{ states.sensor.weatheralerts_2.attributes.alerts[4].effective }}
              {%- if states.sensor.weatheralerts_2.attributes.alerts[4].ends != None %}
                <br>Ends: {{ states.sensor.weatheralerts_2.attributes.alerts[4].ends }}
              {%- endif %}
              <br>Expires: {{ states.sensor.weatheralerts_2.attributes.alerts[4].expires }}
            {% else %}
              None
            {% endif %}
          spoken_title: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              Attention!!! Weather alert for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}. A {{ states.sensor.weatheralerts_2.attributes.alerts[4].title }}. {{ states.sensor.weatheralerts_2.attributes.alerts[4].NWSheadline | regex_replace('\[\'','') | regex_replace('\'\]','') | capitalize }}.
            {% else %}
              None
            {% endif %}
          spoken_message: >
            {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and is_state('sensor.weatheralerts_2_alert_5', 'on') or (is_number(states('sensor.weatheralerts_2')) and (states('sensor.weatheralerts_2')|int > 4)) %}
              {{ states.sensor.weatheralerts_2.attributes.alerts[4].description | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% if states.sensor.weatheralerts_2.attributes.alerts[4].instruction != None %}
                {{ states.sensor.weatheralerts_2.attributes.alerts[4].instruction | regex_replace('\n\n','<p>') | regex_replace('\n',' ') | regex_replace('\*','\n*') | regex_replace('<p>','\n\n') }}
              {% endif %}
            {% else %}
              None
            {% endif %}

      weatheralerts_2_alert_1_last_changed:
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_1') == "on" %}
            {{ states.sensor.weatheralerts_2_alert_1.last_updated }}
          {% else %}
            None
          {% endif %}
      weatheralerts_2_alert_2_last_changed:
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_2') == "on" %}
            {{ states.sensor.weatheralerts_2_alert_2.last_updated }}
          {% else %}
            None
          {% endif %}
      weatheralerts_2_alert_3_last_changed:
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_3') == "on" %}
            {{ states.sensor.weatheralerts_2_alert_3.last_updated }}
          {% else %}
            None
          {% endif %}
      weatheralerts_2_alert_4_last_changed:
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_4') == "on" %}
            {{ states.sensor.weatheralerts_2_alert_4.last_updated }}
          {% else %}
            None
          {% endif %}
      weatheralerts_2_alert_5_last_changed:
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_5') == "on" %}
            {{ states.sensor.weatheralerts_2_alert_5.last_updated }}
          {% else %}
            None
          {% endif %}

      weatheralerts_2_alert_1_most_recent_active_alert:
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% if states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_1') == 'on' %}
              {% set state = state_attr('sensor.weatheralerts_2_alert_1', 'alert_event') %}
            {% else %}
               {% set state = states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') %}
            {% endif %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_1') == 'on' %}
            {{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_event') }}
          {% else %}
            {{ states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') }}
          {% endif %}
        attribute_templates:
          alert_effective: >-
            {% if states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_1') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_effective') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_1_most_recent_active_alert', 'alert_effective') }}
            {% endif %}
          alert_id: >-
            {% if states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_1_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_1') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_1') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_id') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_1_most_recent_active_alert', 'alert_id') }}
            {% endif %}
      weatheralerts_2_alert_2_most_recent_active_alert:
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% if states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_2') == 'on' %}
              {% set state = state_attr('sensor.weatheralerts_2_alert_2', 'alert_event') %}
            {% else %}
               {% set state = states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') %}
            {% endif %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_2') == 'on' %}
            {{ state_attr('sensor.weatheralerts_2_alert_2', 'alert_event') }}
          {% else %}
            {{ states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') }}
          {% endif %}
        attribute_templates:
          alert_effective: >-
            {% if states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_2') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_2', 'alert_effective') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_2_most_recent_active_alert', 'alert_effective') }}
            {% endif %}
          alert_id: >-
            {% if states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_2_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_2') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_2') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_2', 'alert_id') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_2_most_recent_active_alert', 'alert_id') }}
            {% endif %}
      weatheralerts_2_alert_3_most_recent_active_alert:
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% if states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_3') == 'on' %}
              {% set state = state_attr('sensor.weatheralerts_2_alert_3', 'alert_event') %}
            {% else %}
               {% set state = states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') %}
            {% endif %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_3') == 'on' %}
            {{ state_attr('sensor.weatheralerts_2_alert_3', 'alert_event') }}
          {% else %}
            {{ states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') }}
          {% endif %}
        attribute_templates:
          alert_effective: >-
            {% if states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_3') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_3', 'alert_effective') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_3_most_recent_active_alert', 'alert_effective') }}
            {% endif %}
          alert_id: >-
            {% if states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_3_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_3') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_3') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_3', 'alert_id') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_3_most_recent_active_alert', 'alert_id') }}
            {% endif %}
      weatheralerts_2_alert_4_most_recent_active_alert:
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% if states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_4') == 'on' %}
              {% set state = state_attr('sensor.weatheralerts_2_alert_4', 'alert_event') %}
            {% else %}
               {% set state = states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') %}
            {% endif %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
            {% if states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_4', 'alert_event') }}
            {% else %}
              {{ states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') }}
            {% endif %}
        attribute_templates:
          alert_effective: >-
            {% if states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_4', 'alert_effective') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_4_most_recent_active_alert', 'alert_effective') }}
            {% endif %}
          alert_id: >-
            {% if states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_4') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_4') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_4', 'alert_id') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_4_most_recent_active_alert', 'alert_id') }}
            {% endif %}
      weatheralerts_2_alert_5_most_recent_active_alert:
        icon_template: >-
          {% set mapper =  {
              '911 Telephone Outage Emergency' : 'hass:phone-alert',
              'Administrative Message' : 'hass:message-text',
              'Air Quality Alert' : 'hass:blur',
              'Air Stagnation Advisory' : 'hass:blur',
              'Arroyo And Small Stream Flood Advisory' : 'hass:water-alert',
              'Ashfall Advisory' : 'hass:cloud-alert',
              'Ashfall Warning' : 'hass:cloud-alert',
              'Avalanche Advisory' : 'hass:alert',
              'Avalanche Warning' : 'hass:alert',
              'Avalanche Watch' : 'hass:alert',
              'Beach Hazards Statement' : 'hass:beach',
              'Blizzard Warning' : 'hass:snowflake-alert',
              'Blizzard Watch' : 'hass:snowflake-alert',
              'Blowing Dust Advisory' : 'hass:blur',
              'Blowing Dust Warning' : 'hass:blur',
              'Brisk Wind Advisory' : 'hass:weather-windy',
              'Child Abduction Emergency' : 'hass:human-male-child',
              'Civil Danger Warning' : 'hass:image-filter-hdr',
              'Civil Emergency Message' : 'hass:image-filter-hdr',
              'Coastal Flood Advisory' : 'hass:waves',
              'Coastal Flood Statement' : 'hass:waves',
              'Coastal Flood Warning' : 'hass:waves',
              'Coastal Flood Watch' : 'hass:waves',
              'Dense Fog Advisory' : 'hass:weather-fog',
              'Dense Smoke Advisory' : 'hass:smoke',
              'Dust Advisory' : 'hass:blur',
              'Dust Storm Warning' : 'hass:blur',
              'Earthquake Warning' : 'hass:alert',
              'Evacuation - Immediate' : 'hass:exit-run',
              'Excessive Heat Warning' : 'hass:thermometer-plus',
              'Excessive Heat Watch' : 'hass:thermometer-plus',
              'Extreme Cold Warning' : 'hass:thermometer-minus',
              'Extreme Cold Watch' : 'hass:thermometer-minus',
              'Extreme Fire Danger' : 'hass:fire-alert',
              'Extreme Wind Warning' : 'hass:weather-windy',
              'Fire Warning' : 'hass:fire-alert',
              'Fire Weather Watch' : 'hass:fire-alert',
              'Flash Flood Statement' : 'hass:water-alert',
              'Flash Flood Warning' : 'hass:water-alert',
              'Flash Flood Watch' : 'hass:water-alert',
              'Flood Advisory' : 'hass:water-alert',
              'Flood Statement' : 'hass:water-alert',
              'Flood Warning' : 'hass:water-alert',
              'Flood Watch' : 'hass:water-alert',
              'Freeze Warning' : 'hass:thermometer-minus',
              'Freeze Watch' : 'hass:thermometer-minus',
              'Freezing Fog Advisory' : 'hass:snowflake-alert',
              'Freezing Rain Advisory' : 'hass:snowflake-alert',
              'Freezing Spray Advisory' : 'hass:snowflake-alert',
              'Frost Advisory' : 'hass:snowflake-alert',
              'Gale Warning' : 'hass:weather-windy',
              'Gale Watch' : 'hass:weather-windy',
              'Hard Freeze Warning' : 'hass:thermometer-minus',
              'Hard Freeze Watch' : 'hass:thermometer-minus',
              'Hazardous Materials Warning' : 'hass:radioactive',
              'Hazardous Seas Warning' : 'hass:sail-boat',
              'Hazardous Seas Watch' : 'hass:sail-boat',
              'Hazardous Weather Outlook' : 'hass:message-alert',
              'Heat Advisory' : 'hass:thermometer-plus',
              'Heavy Freezing Spray Warning' : 'hass:snowflake-alert',
              'Heavy Freezing Spray Watch' : 'hass:snowflake-alert',
              'High Surf Advisory' : 'hass:surfing',
              'High Surf Warning' : 'hass:surfing',
              'High Wind Warning' : 'hass:weather-windy',
              'High Wind Watch' : 'hass:weather-windy',
              'Hurricane Force Wind Warning' : 'hass:weather-hurricane',
              'Hurricane Force Wind Watch' : 'hass:weather-hurricane',
              'Hurricane Local Statement' : 'hass:weather-hurricane',
              'Hurricane Warning' : 'hass:weather-hurricane',
              'Hurricane Watch' : 'hass:weather-hurricane',
              'Hydrologic Advisory' : 'hass:message-text',
              'Hydrologic Outlook' : 'hass:message-text',
              'Ice Storm Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Advisory' : 'hass:snowflake-alert',
              'Lake Effect Snow Warning' : 'hass:snowflake-alert',
              'Lake Effect Snow Watch' : 'hass:snowflake-alert',
              'Lake Wind Advisory' : 'hass:weather-windy',
              'Lakeshore Flood Advisory' : 'hass:waves-arrow-up',
              'Lakeshore Flood Statement' : 'hass:waves-arrow-up',
              'Lakeshore Flood Warning' : 'hass:waves-arrow-up',
              'Lakeshore Flood Watch' : 'hass:waves-arrow-up',
              'Law Enforcement Warning' : 'hass:car-emergency',
              'Local Area Emergency' : 'hass:alert',
              'Low Water Advisory' : 'hass:wave',
              'Marine Weather Statement' : 'hass:sail-boat',
              'Nuclear Power Plant Warning' : 'hass:radioactive',
              'Radiological Hazard Warning' : 'hass:biohazard',
              'Red Flag Warning' : 'hass:fire-alert',
              'Rip Current Statement' : 'hass:surfing',
              'Severe Thunderstorm Warning' : 'hass:weather-lightning',
              'Severe Thunderstorm Watch' : 'hass:weather-lightning',
              'Severe Weather Statement' : 'hass:message-text',
              'Shelter In Place Warning' : 'hass:account-box',
              'Short Term Forecast' : 'hass:message-text',
              'Small Craft Advisory' : 'hass:sail-boat',
              'Small Craft Advisory For Hazardous Seas' : 'hass:sail-boat',
              'Small Craft Advisory For Rough Bar' : 'hass:sail-boat',
              'Small Craft Advisory For Winds' : 'hass:sail-boat',
              'Small Stream Flood Advisory' : 'hass:water-alert',
              'Snow Squall Warning' : 'hass:snowflake-alert',
              'Special Marine Warning' : 'hass:sail-boat',
              'Special Weather Statement' : 'hass:message-alert',
              'Storm Surge Warning' : 'hass:waves-arrow-up',
              'Storm Surge Watch' : 'hass:waves-arrow-up',
              'Storm Warning' : 'hass:weather-lightning',
              'Storm Watch' : 'hass:weather-lightning',
              'Test' : 'hass:message-text',
              'Tornado Warning' : 'hass:weather-tornado',
              'Tornado Watch' : 'hass:weather-tornado',
              'Tropical Depression Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Local Statement' : 'hass:weather-hurricane',
              'Tropical Storm Warning' : 'hass:weather-hurricane',
              'Tropical Storm Watch' : 'hass:weather-hurricane',
              'Tsunami Advisory' : 'hass:waves-arrow-up',
              'Tsunami Warning' : 'hass:waves-arrow-up',
              'Tsunami Watch' : 'hass:waves-arrow-up',
              'Typhoon Local Statement' : 'hass:weather-hurricane',
              'Typhoon Warning' : 'hass:weather-hurricane',
              'Typhoon Watch' : 'hass:weather-hurricane',
              'Urban And Small Stream Flood Advisory' : 'hass:home-flood',
              'Volcano Warning' : 'hass:image-filter-hdr',
              'Wind Advisory' : 'hass:weather-windy',
              'Wind Chill Advisory' : 'hass:thermometer-minus',
              'Wind Chill Warning' : 'hass:thermometer-minus',
              'Wind Chill Watch' : 'hass:thermometer-minus',
              'Winter Storm Warning' : 'hass:snowflake-alert',
              'Winter Storm Watch' : 'hass:snowflake-alert',
              'Winter Weather Advisory' : 'hass:snowflake-alert' } %}
          {% if not is_state('sensor.weatheralerts_2', 'unavailable') and not is_state('sensor.weatheralerts_2', 'unknown') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null) or (not is_state('sensor.weatheralerts_2', 'unavailable') and (state_attr('sensor.weatheralerts_2', 'alerts')[0] != null)) %}
            {% if states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              {% set state = 'unavailable' %}
            {% elif states('sensor.weatheralerts_2_alert_5') == 'on' %}
              {% set state = state_attr('sensor.weatheralerts_2_alert_5', 'alert_event') %}
            {% else %}
               {% set state = states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') %}
            {% endif %}
          {% else %}
            {% set state = 'unavailable' %}
          {% endif %}
          {{ mapper[state] if state in mapper else 'hass:alert-rhombus' }}
        value_template: >-
          {% if states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
            unavailable
          {% elif states('sensor.weatheralerts_2_alert_5') == 'on' %}
            {{ state_attr('sensor.weatheralerts_2_alert_5', 'alert_event') }}
          {% else %}
            {{ states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') }}
          {% endif %}
        attribute_templates:
          alert_effective: >-
            {% if states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_5') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_5', 'alert_effective') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_5_most_recent_active_alert', 'alert_effective') }}
            {% endif %}
          alert_id: >-
            {% if states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == '' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unavailable' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_5_most_recent_active_alert') == 'unknown' and states('sensor.weatheralerts_2_alert_5') != 'on' %}
              unavailable
            {% elif states('sensor.weatheralerts_2_alert_5') == 'on' %}
              {{ state_attr('sensor.weatheralerts_2_alert_5', 'alert_id') }}
            {% else %}
              {{ state_attr('sensor.weatheralerts_2_alert_5_most_recent_active_alert', 'alert_id') }}
            {% endif %}

      weatheralerts_2_alerts_are_active:
        friendly_name: Weather Alerts Are Active
        icon_template: mdi:alert-rhombus
        value_template: >
          {% if (states('sensor.weatheralerts_2')|int(default=0) > 0) or ((states('sensor.weatheralerts_2') == 'unavailable') and (states('sensor.weatheralerts_2_alert_1') == 'on')) %}
            Yes
          {% else %}
            No
          {% endif %}




################################################################################
## input_text ##

input_text:
  weatheralerts_2_triggered_ui_alert_ids:
    name: Triggered Weather Alert IDs - UI
    icon: mdi:information-variant
    max: 255
    initial: None

  weatheralerts_2_triggered_pushbullet_alert_ids:
    name: Triggered Weather Alert IDs - Pushbullet
    icon: mdi:information-variant
    max: 255
    initial: None




################################################################################
## automation ##

automation:
  ## Automation to trigger a UI notification when there is an active weather alert.
  ## weatheralerts_2_alert_1 should always contain most recent alert.
  - alias: Weather Alert UI Notification - 2
    #initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.weatheralerts_2_alert_1_last_changed
      - platform: homeassistant
        event: start
    condition:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ states('sensor.weatheralerts_2_alerts_are_active') == 'Yes' }}"
          - condition: template
            value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_1', 'alert_sent'))) < 3600 }}"
          - condition: template
            value_template: "{{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_id') not in states('input_text.weatheralerts_2_triggered_ui_alert_ids') }}"
    action:
      - service: script.weatheralerts_2_popup_on_wx_alert
        data_template:
          title: >
            {% if (states('sensor.weatheralerts_2_alert_1') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_1', 'alert_effective'))|float) <= 3600) %}
              {{ states.sensor.weatheralerts_2_alert_1.attributes.display_title }}
            {% else %}
              Weather Alerts
            {% endif %}
          message: >
            {% if (states('sensor.weatheralerts_2_alert_1') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_1', 'alert_effective'))|float) <= 3600) %}
              {{ state_attr('sensor.weatheralerts_2_alert_1', 'display_message') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_1') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_1', 'alert_effective'))|float) > 3600) %}
              <hr>Alert: <br>{{ state_attr('sensor.weatheralerts_2_alert_1', 'display_title') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_2') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_2', 'alert_effective'))|float) <= 3600) %}
              <hr>{{ state_attr('sensor.weatheralerts_2_alert_2', 'display_title') }}<br>
              {{ state_attr('sensor.weatheralerts_2_alert_2', 'display_message') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_2') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_2', 'alert_effective'))|float) > 3600) %}
              <hr>Alert: <br>{{ state_attr('sensor.weatheralerts_2_alert_2', 'display_title') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_3') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_3', 'alert_effective'))|float) <= 3600) %}
              <hr>{{ state_attr('sensor.weatheralerts_2_alert_3', 'display_title') }}<br>
              {{ state_attr('sensor.weatheralerts_2_alert_3', 'display_message') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_3') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_3', 'alert_effective'))|float) > 3600) %}
              <hr>Alert: <br>{{ state_attr('sensor.weatheralerts_2_alert_3', 'display_title') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_4') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_4', 'alert_effective'))|float) <= 3600) %}
              <hr>{{ state_attr('sensor.weatheralerts_2_alert_4', 'display_title') }}<br>
              {{ state_attr('sensor.weatheralerts_2_alert_4', 'display_message') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_4') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_4', 'alert_effective'))|float) > 3600) %}
              <hr>Alert: <br>{{ state_attr('sensor.weatheralerts_2_alert_4', 'display_title') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_5') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_5', 'alert_effective'))|float) <= 3600) %}
              <hr>{{ state_attr('sensor.weatheralerts_2_alert_5', 'display_title') }}<br>
              {{ state_attr('sensor.weatheralerts_2_alert_5', 'display_message') }}
            {% endif %}
            {% if (states('sensor.weatheralerts_2_alert_5') == 'on') and ((as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_5', 'alert_effective'))|float) > 3600) %}
              <hr>Alert: <br>{{ state_attr('sensor.weatheralerts_2_alert_5', 'display_title') }}
            {% endif %}
      - service: input_text.set_value
        data_template:
          entity_id: input_text.weatheralerts_2_triggered_ui_alert_ids
          value: "{{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_2', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_3', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_4', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_5', 'alert_id') }}"

    ## Automation to dismiss UI notification if there are no active alerts for 30 minutes
    ## Disable or remove this automation if you don't want notifications to auto-dismiss
  - alias: Weather Alert UI Notification Auto-dismiss - 2
    trigger:
      - platform: state
        entity_id: sensor.weatheralerts_2_alerts_are_active
        to: "No"
        for:
          minutes: 30
      - platform: homeassistant
        event: start
    condition:
      - condition: template
        value_template: "{{ states('sensor.weatheralerts_2_alerts_are_active') == 'No' }}"
    action:
      - service: persistent_notification.dismiss
        data:
          notification_id: "weatheralerts_2_alert"

  ## Automation to push alerts via Pushbullet service
  ## Disable or remove this automation if you don't use Pushbullet
  - alias: Weather Alerts Pushbullet Notification - 2
    trigger:
      platform: state
      entity_id: sensor.weatheralerts_2_alert_1_last_changed
    condition:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ states('sensor.weatheralerts_2_alerts_are_active') == 'Yes' }}"
          - condition: template
            value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('sensor.weatheralerts_2_alert_1', 'alert_sent'))) < 3600 }}"
          - condition: template
            value_template: "{{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_id') not in states('input_text.weatheralerts_2_triggered_pushbullet_alert_ids') }}"
    action:
      - service: notify.pushbullet_notify
        data_template:
          message: >
            Current NWS Weather Alerts:
              
            {% if states('sensor.weatheralerts_2_alerts_are_active') == "No" %}
            No alerts at this time for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}.
            {% endif %}
            {% if states.sensor.weatheralerts_2_alert_1.state == "on" %}
            {{ states.sensor.weatheralerts_2_alert_1.attributes.display_title }} for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              
            {% endif %}
            {% if states.sensor.weatheralerts_2_alert_2.state == "on" %}
            {{ states.sensor.weatheralerts_2_alert_2.attributes.display_title }} for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              
            {% endif %}
            {% if states.sensor.weatheralerts_2_alert_3.state == "on" %}
            {{ states.sensor.weatheralerts_2_alert_3.attributes.display_title }} for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              
            {% endif %}
            {% if states.sensor.weatheralerts_2_alert_4.state == "on" %}
            {{ states.sensor.weatheralerts_2_alert_4.attributes.display_title }} for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
              
            {% endif %}
            {% if states.sensor.weatheralerts_2_alert_5.state == "on" %}
            {{ states.sensor.weatheralerts_2_alert_5.attributes.display_title }} for {{ state_attr('sensor.weatheralerts_2', 'friendly_name') }}
            {% endif %}
      - service: input_text.set_value
        data_template:
          entity_id: input_text.weatheralerts_2_triggered_pushbullet_alert_ids
          value: "{{ state_attr('sensor.weatheralerts_2_alert_1', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_2', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_3', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_4', 'alert_id') }} {{ state_attr('sensor.weatheralerts_2_alert_5', 'alert_id') }}"




################################################################################
## script ##

script:
  ## Script creates UI notification and is called via automation defined above
  weatheralerts_2_popup_on_wx_alert:
    alias: Weather Alert Pop Up - 2
    sequence:
        ## Dismiss any current alert so the UI isn't filled 
        ## up with these if there are more then one.
        ## Only show the most recent alert
      - service: persistent_notification.dismiss
        data:
          notification_id: "weatheralerts_2_alert"
        ## Create a new persistant notification in the UI for a new alert
      - service: >
          {% if states.sensor.weatheralerts_2.state != '0' %}
            persistent_notification.create
          {% endif %}
        data_template:
          notification_id: "weatheralerts_2_alert"
          message: "{{ message }}"
          title: "{{ title }}"
